apply plugin: 'android'

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
  'androidTest', // test code.
  'main']     // main sample code; look here for the interesting stuff.

android {
  compileSdkVersion 19
  buildToolsVersion '19.1.0'

  defaultConfig {
    minSdkVersion 11
    targetSdkVersion 19
    versionCode 1
    versionName '1.0'
  }

  buildTypes {
    release {
      runProguard false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
  }

  sourceSets {
    main {
      dirs.each { dir ->
        java.srcDirs "src/${dir}/java"
        res.srcDirs "src/${dir}/res"
      }
    }

    androidTest.setRoot('src/androidTest')
    androidTest.java.srcDirs = ['src/androidTest/java']
  }

  productFlavors {
  }
}

sourceSets {
  androidTest.java.srcDirs = ['src/androidTest/java']
  unitTest {
    java.srcDir file('src/androidTest/java')
    compileClasspath = sourceSets.androidTest.output
    runtimeClasspath = output + compileClasspath
  }
}

task unitTest(type:Test, dependsOn: assemble) {
  description = 'Runs the Instrumentation Test'
  testClassesDir = sourceSets.unitTest.output.classesDir
  classpath = sourceSets.unitTest.runtimeClasspath
}

check.dependsOn unitTest

dependencies {
  compile 'com.android.support:appcompat-v7:20.+'
  compile 'com.google.android.gms:play-services:+'
  compile files('libs/alljoyn.jar')
}
